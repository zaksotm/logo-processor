{"ast":null,"code":"var Parser = require('./lib/parser');\n\nfunction getGlobal() {\n  return (1, eval)('this');\n}\n\nmodule.exports = {\n  create: function (buffer, global) {\n    global = global || getGlobal();\n\n    if (buffer instanceof global.ArrayBuffer) {\n      var DOMBufferStream = require('./lib/dom-bufferstream');\n\n      return new Parser(new DOMBufferStream(buffer, 0, buffer.byteLength, true, global));\n    } else {\n      var NodeBufferStream = require('./lib/bufferstream');\n\n      return new Parser(new NodeBufferStream(buffer, 0, buffer.length, true));\n    }\n  }\n};","map":{"version":3,"sources":["/Users/zakstratton/Documents/logo-processor/node_modules/exif-parser/index.js"],"names":["Parser","require","getGlobal","eval","module","exports","create","buffer","global","ArrayBuffer","DOMBufferStream","byteLength","NodeBufferStream","length"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,cAAD,CAApB;;AAEA,SAASC,SAAT,GAAqB;AACpB,SAAO,CAAC,GAAEC,IAAH,EAAS,MAAT,CAAP;AACA;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,MAAM,EAAE,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AAChCA,IAAAA,MAAM,GAAGA,MAAM,IAAIN,SAAS,EAA5B;;AACA,QAAGK,MAAM,YAAYC,MAAM,CAACC,WAA5B,EAAyC;AACxC,UAAIC,eAAe,GAAGT,OAAO,CAAC,wBAAD,CAA7B;;AACA,aAAO,IAAID,MAAJ,CAAW,IAAIU,eAAJ,CAAoBH,MAApB,EAA4B,CAA5B,EAA+BA,MAAM,CAACI,UAAtC,EAAkD,IAAlD,EAAwDH,MAAxD,CAAX,CAAP;AACA,KAHD,MAGO;AACN,UAAII,gBAAgB,GAAGX,OAAO,CAAC,oBAAD,CAA9B;;AACA,aAAO,IAAID,MAAJ,CAAW,IAAIY,gBAAJ,CAAqBL,MAArB,EAA6B,CAA7B,EAAgCA,MAAM,CAACM,MAAvC,EAA+C,IAA/C,CAAX,CAAP;AACA;AACD;AAVe,CAAjB","sourcesContent":["var Parser = require('./lib/parser');\n\nfunction getGlobal() {\n\treturn (1,eval)('this');\n}\n\nmodule.exports = {\n\tcreate: function(buffer, global) {\n\t\tglobal = global || getGlobal();\n\t\tif(buffer instanceof global.ArrayBuffer) {\n\t\t\tvar DOMBufferStream = require('./lib/dom-bufferstream');\n\t\t\treturn new Parser(new DOMBufferStream(buffer, 0, buffer.byteLength, true, global));\n\t\t} else {\n\t\t\tvar NodeBufferStream = require('./lib/bufferstream');\n\t\t\treturn new Parser(new NodeBufferStream(buffer, 0, buffer.length, true));\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}