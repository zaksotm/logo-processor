{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _timm = require(\"timm\");\n\nvar _pluginDither = _interopRequireDefault(require(\"@jimp/plugin-dither\"));\n\nvar _pluginResize = _interopRequireDefault(require(\"@jimp/plugin-resize\"));\n\nvar _pluginBlit = _interopRequireDefault(require(\"@jimp/plugin-blit\"));\n\nvar _pluginRotate = _interopRequireDefault(require(\"@jimp/plugin-rotate\"));\n\nvar _pluginColor = _interopRequireDefault(require(\"@jimp/plugin-color\"));\n\nvar _pluginPrint = _interopRequireDefault(require(\"@jimp/plugin-print\"));\n\nvar _pluginBlur = _interopRequireDefault(require(\"@jimp/plugin-blur\"));\n\nvar _pluginCrop = _interopRequireDefault(require(\"@jimp/plugin-crop\"));\n\nvar _pluginNormalize = _interopRequireDefault(require(\"@jimp/plugin-normalize\"));\n\nvar _pluginInvert = _interopRequireDefault(require(\"@jimp/plugin-invert\"));\n\nvar _pluginGaussian = _interopRequireDefault(require(\"@jimp/plugin-gaussian\"));\n\nvar _pluginFlip = _interopRequireDefault(require(\"@jimp/plugin-flip\"));\n\nvar _pluginMask = _interopRequireDefault(require(\"@jimp/plugin-mask\"));\n\nvar _pluginScale = _interopRequireDefault(require(\"@jimp/plugin-scale\"));\n\nvar _pluginDisplace = _interopRequireDefault(require(\"@jimp/plugin-displace\"));\n\nvar _pluginContain = _interopRequireDefault(require(\"@jimp/plugin-contain\"));\n\nvar _pluginCover = _interopRequireDefault(require(\"@jimp/plugin-cover\"));\n\nvar plugins = [_pluginDither[\"default\"], _pluginResize[\"default\"], _pluginBlit[\"default\"], _pluginRotate[\"default\"], _pluginColor[\"default\"], _pluginPrint[\"default\"], _pluginBlur[\"default\"], _pluginCrop[\"default\"], _pluginNormalize[\"default\"], _pluginInvert[\"default\"], _pluginGaussian[\"default\"], _pluginFlip[\"default\"], _pluginMask[\"default\"], _pluginScale[\"default\"], _pluginDisplace[\"default\"], _pluginContain[\"default\"], _pluginCover[\"default\"]];\n\nvar _default = function _default(jimpEvChange) {\n  var initializedPlugins = plugins.map(function (pluginModule) {\n    var plugin = pluginModule(jimpEvChange) || {};\n\n    if (!plugin[\"class\"] && !plugin.constants) {\n      // Default to class function\n      plugin = {\n        \"class\": plugin\n      };\n    }\n\n    return plugin;\n  });\n  return _timm.mergeDeep.apply(void 0, (0, _toConsumableArray2[\"default\"])(initializedPlugins));\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../src/index.js"],"names":["plugins","dither","resize","blit","rotate","color","print","blur","crop","normalize","invert","gaussian","flip","mask","scale","displace","contain","cover","initializedPlugins","plugin","pluginModule","mergeDeep"],"mappings":";;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AAEA,IAAMA,OAAO,GAAG,CACdC,aAAAA,CADc,SACdA,CADc,EAEdC,aAAAA,CAFc,SAEdA,CAFc,EAGdC,WAAAA,CAHc,SAGdA,CAHc,EAIdC,aAAAA,CAJc,SAIdA,CAJc,EAKdC,YAAAA,CALc,SAKdA,CALc,EAMdC,YAAAA,CANc,SAMdA,CANc,EAOdC,WAAAA,CAPc,SAOdA,CAPc,EAQdC,WAAAA,CARc,SAQdA,CARc,EASdC,gBAAAA,CATc,SASdA,CATc,EAUdC,aAAAA,CAVc,SAUdA,CAVc,EAWdC,eAAAA,CAXc,SAWdA,CAXc,EAYdC,WAAAA,CAZc,SAYdA,CAZc,EAadC,WAAAA,CAbc,SAadA,CAbc,EAcdC,YAAAA,CAdc,SAcdA,CAdc,EAedC,eAAAA,CAfc,SAedA,CAfc,EAgBdC,cAAAA,CAhBc,SAgBdA,CAhBc,EAiBdC,YAAAA,CAjBF,SAiBEA,CAjBc,CAAhB;;eAoBe,SAAA,QAAA,CAAA,YAAA,EAAgB;AAC7B,MAAMC,kBAAkB,GAAG,OAAO,CAAP,GAAA,CAAY,UAAA,YAAA,EAAgB;AACrD,QAAIC,MAAM,GAAGC,YAAY,CAAZA,YAAY,CAAZA,IAAb,EAAA;;AAEA,QAAI,CAACD,MAAM,CAAP,OAAO,CAAP,IAAiB,CAACA,MAAM,CAA5B,SAAA,EAAwC;AACtC;AACAA,MAAAA,MAAM,GAAG;AAAE,iBAAOA;AAAT,OAATA;AACD;;AAED,WAAA,MAAA;AARF,GAA2B,CAA3B;AAWA,SAAOE,KAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,GAAAA,mBAAAA,CAAAA,SAAAA,CAAAA,EAAP,kBAAOA,CAAAA,CAAP","sourcesContent":["import { mergeDeep } from 'timm';\n\nimport dither from '@jimp/plugin-dither';\nimport resize from '@jimp/plugin-resize';\nimport blit from '@jimp/plugin-blit';\nimport rotate from '@jimp/plugin-rotate';\nimport color from '@jimp/plugin-color';\nimport print from '@jimp/plugin-print';\nimport blur from '@jimp/plugin-blur';\nimport crop from '@jimp/plugin-crop';\nimport normalize from '@jimp/plugin-normalize';\nimport invert from '@jimp/plugin-invert';\nimport gaussian from '@jimp/plugin-gaussian';\nimport flip from '@jimp/plugin-flip';\nimport mask from '@jimp/plugin-mask';\nimport scale from '@jimp/plugin-scale';\nimport displace from '@jimp/plugin-displace';\nimport contain from '@jimp/plugin-contain';\nimport cover from '@jimp/plugin-cover';\n\nconst plugins = [\n  dither,\n  resize,\n  blit,\n  rotate,\n  color,\n  print,\n  blur,\n  crop,\n  normalize,\n  invert,\n  gaussian,\n  flip,\n  mask,\n  scale,\n  displace,\n  contain,\n  cover\n];\n\nexport default jimpEvChange => {\n  const initializedPlugins = plugins.map(pluginModule => {\n    let plugin = pluginModule(jimpEvChange) || {};\n\n    if (!plugin.class && !plugin.constants) {\n      // Default to class function\n      plugin = { class: plugin };\n    }\n\n    return plugin;\n  });\n\n  return mergeDeep(...initializedPlugins);\n};\n"]},"metadata":{},"sourceType":"script"}