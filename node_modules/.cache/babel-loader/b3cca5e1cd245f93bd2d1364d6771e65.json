{"ast":null,"code":"'use strict';\n\nvar paethPredictor = require('./paeth-predictor');\n\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (var x = 0; x < byteWidth; x++) {\n    rawData[rawPos + x] = pxData[pxPos + x];\n  }\n}\n\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n  var sum = 0;\n  var length = pxPos + byteWidth;\n\n  for (var i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n\n  return sum;\n}\n\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (var x = 0; x < byteWidth; x++) {\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - up;\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n  var sum = 0;\n  var length = pxPos + byteWidth;\n\n  for (var x = pxPos; x < length; x++) {\n    var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    var val = pxData[x] - up;\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - (left + up >> 1);\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - (left + up >> 1);\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nvar filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth\n};\nvar filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth\n};\n\nmodule.exports = function (pxData, width, height, options, bpp) {\n  var filterTypes;\n\n  if (!('filterType' in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  } else if (typeof options.filterType === 'number') {\n    filterTypes = [options.filterType];\n  } else {\n    throw new Error('unrecognised filter types');\n  }\n\n  if (options.bitDepth === 16) {\n    bpp *= 2;\n  }\n\n  var byteWidth = width * bpp;\n  var rawPos = 0;\n  var pxPos = 0;\n  var rawData = new Buffer((byteWidth + 1) * height);\n  var sel = filterTypes[0];\n\n  for (var y = 0; y < height; y++) {\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      var min = Infinity;\n\n      for (var i = 0; i < filterTypes.length; i++) {\n        var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n\n  return rawData;\n};","map":{"version":3,"sources":["/Users/zakstratton/Documents/logo-processor/node_modules/pngjs/lib/filter-pack.js"],"names":["paethPredictor","require","filterNone","pxData","pxPos","byteWidth","rawData","rawPos","x","filterSumNone","sum","length","i","Math","abs","filterSub","bpp","left","val","filterSumSub","filterUp","up","filterSumUp","filterAvg","filterSumAvg","filterPaeth","upleft","filterSumPaeth","filters","filterSums","module","exports","width","height","options","filterTypes","filterType","Error","bitDepth","Buffer","sel","y","min","Infinity"],"mappings":"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","sourcesContent":["'use strict';\n\nvar paethPredictor = require('./paeth-predictor');\n\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n\n  for (var x = 0; x < byteWidth; x++) {\n    rawData[rawPos + x] = pxData[pxPos + x];\n  }\n}\n\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n\n  var sum = 0;\n  var length = pxPos + byteWidth;\n\n  for (var i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n  return sum;\n}\n\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - up;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n\n  var sum = 0;\n  var length = pxPos + byteWidth;\n  for (var x = pxPos; x < length; x++) {\n\n    var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    var val = pxData[x] - up;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nvar filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth\n};\n\nvar filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth\n};\n\nmodule.exports = function(pxData, width, height, options, bpp) {\n\n  var filterTypes;\n  if (!('filterType' in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  }\n  else if (typeof options.filterType === 'number') {\n    filterTypes = [options.filterType];\n  }\n  else {\n    throw new Error('unrecognised filter types');\n  }\n\n  if (options.bitDepth === 16) {\n    bpp *= 2;\n  }\n  var byteWidth = width * bpp;\n  var rawPos = 0;\n  var pxPos = 0;\n  var rawData = new Buffer((byteWidth + 1) * height);\n\n  var sel = filterTypes[0];\n\n  for (var y = 0; y < height; y++) {\n\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      var min = Infinity;\n\n      for (var i = 0; i < filterTypes.length; i++) {\n        var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n  return rawData;\n};\n"]},"metadata":{},"sourceType":"script"}