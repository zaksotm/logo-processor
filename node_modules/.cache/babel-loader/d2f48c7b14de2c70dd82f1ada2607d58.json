{"ast":null,"code":"import _regeneratorRuntime from\"/Users/zakstratton/Documents/logo-processor/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/zakstratton/Documents/logo-processor/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _assertThisInitialized from\"/Users/zakstratton/Documents/logo-processor/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _classCallCheck from\"/Users/zakstratton/Documents/logo-processor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/zakstratton/Documents/logo-processor/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/zakstratton/Documents/logo-processor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/zakstratton/Documents/logo-processor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/zakstratton/Documents/logo-processor/node_modules/@babel/runtime/helpers/esm/inherits\";//TODO/NOTES:\n//instead of storing results in state, use global array\n//maybe 2d array for properties? idk\nimport React from'react';import ReactDOM from'react-dom';import'./style/index.css';//import './style/_buttons.scss';\nimport ImageUploader from'react-images-upload';import Jimp from'jimp/es';var jimp=require('jimp');//Three global color data structures, one a map of objects, one an array,\n//and one a 2D array\n//TODO: Downscale to remove map of objects, unneeded\nvar colors={black:'#000000',onyx:'#333538',charcoal:'#5f6468',concrete:'#97a0a7',quicksilver:'#e4e5e6',bleach:'#ffffff',rich_brown:'#372820',mushroom:'#716257',sand:'#bab3a0',natural:'#f9f4ec',navy:'#081e2c',ultramarine:'#29217d',lagoon:'#003e66',cerulean:'#0169ca',cornflower:'#529afc',cyan:'#009ff1',peacock:'#01aec9',aruba:'#9dfbe7',lake:'#6ac4dd',seafoam:'#4ca696',reef:'#00947d',teal:'#007171',pine:'#2b4423',kelly:'#21772f',jade:'#14b25a',turf:'#60933b',lime:'#a0ce3e',goldenrod:'#d5d03a',yellow:'#fff71b',sunflower:'#ffc938',carmel:'#d8a15e',clementine:'#ff9a23',living_coral:'#fb686d',persimmon:'#fd5130',red_orange:'#db1d3c',red:'#c50f2d',burnt_orange:'#a84c28',rust:'#763742',maroon:'#581c32',deep_pink:'#c40876',hibiscus:'#de4b9b',blush:'#fdaeca',peach:'#f7bfab',lavender:'#a08dd6',iris:'#77479f',purple:'#5d1e5c',royal_purple:'#401e72',moose:'#653c2c',violet:'#6753b2',green_apple:'#76c727',carrot:'#fd673e',lapis:'#3c2f8f',parrot:'#2fd078',french_blue:'#638ee4'};var outputImages=new Array();var firstrun=true;var sourceImg=\"\";var sourceColorChange=\"\";//TODO: Move initialization of arrays to seperate function\nvar colorsFreq=new Array(54);var colorsArray=new Array(54);//Initialize colorsArray\n//load only hex values of colors into an array\nfor(var i=0;i<colorsArray.length;i++){colorsArray[i]=Object.values(colors)[i];}//make colorsFreq into a 2D array\nfor(var i=0;i<colorsFreq.length;i++){colorsFreq[i]=new Array(2);}//Initialize colorsFreq\n//copy array into new 2d array, starting with 0 for all frequencies\nfor(var i=0;i<colorsFreq.length;i++){colorsFreq[i][0]=colorsArray[i];colorsFreq[i][1]=0;}var nearestColor=require('nearest-color').from(colors);//initialize the default image\nvar src=require(\"./test2.jpg\");//janky way around CORS policy for getting from dropbox link, pass through cors-anywhere server\n//var dropboxURL = \"0\"\n//var imgFinal = (\"https://cors-anywhere.herokuapp.com/\" + dropboxURL.slice(0, -1) + \"1\");\n//-------------------------------------------------------------\n//Main classes for displaying the output image array\n//-------------------------------------------------------------\nvar DisplayLogoImg=/*#__PURE__*/function(_React$Component){_inherits(DisplayLogoImg,_React$Component);function DisplayLogoImg(){_classCallCheck(this,DisplayLogoImg);return _possibleConstructorReturn(this,_getPrototypeOf(DisplayLogoImg).apply(this,arguments));}_createClass(DisplayLogoImg,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"workDisplay\"},React.createElement(\"div\",{className:\"gallery\"},React.createElement(\"h1\",null,\"Source\"),React.createElement(\"img\",{className:\"workImage\",src:sourceImg,alt:\"Source\"})),React.createElement(\"div\",{className:\"gallery\"},React.createElement(\"h1\",null,\"Results\"),React.createElement(\"h2\",null,\"Scaled\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[0],alt:\"Result #1\"}),React.createElement(\"h2\",null,\"Scaled + Our Colors\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[1],alt:\"Result #1\"}),React.createElement(\"h2\",null,\"Scaled + Greyscale + Our Colors\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[2],alt:\"Result #1\"}),React.createElement(\"h2\",null,\"Scaled + Our Colors (Reduced)\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[3],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[4],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[5],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[6],alt:\"Result #1\"}),React.createElement(\"h2\",null,\"Scaled + Posterized (Values 7-5-3-2) + Our Colors\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[7],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[8],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[9],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[10],alt:\"Result #1\"}),React.createElement(\"h2\",null,\"Scaled + Posterized (Value 7) + Our Colors (Max 5,4,3,2)\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[11],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[12],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[13],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[14],alt:\"Result #1\"}),React.createElement(\"h2\",null,\"Scaled + Posterized (Value 5) + Our Colors (Max 5,4,3,2)\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[15],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[16],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[17],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[18],alt:\"Result #1\"}),React.createElement(\"h2\",null,\"Scaled + Posterized (Value 3) + Our Colors (Max 5,4,3,2)\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[19],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[20],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[21],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[22],alt:\"Result #1\"}),React.createElement(\"h2\",null,\"Scaled + Posterized (Value 2) + Our Colors (Max 5,4,3,2)\"),React.createElement(\"img\",{className:\"workImage\",src:outputImages[23],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[24],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[25],alt:\"Result #1\"}),React.createElement(\"img\",{className:\"workImage\",src:outputImages[26],alt:\"Result #1\"})));}}]);return DisplayLogoImg;}(React.Component);//-------------------------------------------------------------\n//Custom classes for each button, passes state up\n//TODO:   Merge all of one type into a single class? [buttons, forms, etc]\n//        Transfer classes into seperate file and import it\n//-------------------------------------------------------------\nvar Linkform=/*#__PURE__*/function(_React$Component2){_inherits(Linkform,_React$Component2);function Linkform(){_classCallCheck(this,Linkform);return _possibleConstructorReturn(this,_getPrototypeOf(Linkform).apply(this,arguments));}_createClass(Linkform,[{key:\"render\",value:function render(){return React.createElement(\"form\",{className:\"myForm\"},React.createElement(\"label\",null,\"Dropbox Link:\",React.createElement(\"input\",{type:\"text\",onChange:this.props.onChange})));}}]);return Linkform;}(React.Component);var ScaleForm=/*#__PURE__*/function(_React$Component3){_inherits(ScaleForm,_React$Component3);function ScaleForm(){_classCallCheck(this,ScaleForm);return _possibleConstructorReturn(this,_getPrototypeOf(ScaleForm).apply(this,arguments));}_createClass(ScaleForm,[{key:\"render\",value:function render(){return React.createElement(\"form\",{className:\"myForm\"},React.createElement(\"label\",null,\"Resize X:\",React.createElement(\"input\",{type:\"number\",onChange:this.props.onChangeX})),React.createElement(\"label\",null,\"Resize Y:\",React.createElement(\"input\",{type:\"number\",onChange:this.props.onChangeY})),\"Leave blank to keep aspect ratio\");}}]);return ScaleForm;}(React.Component);var StretchForm=/*#__PURE__*/function(_React$Component4){_inherits(StretchForm,_React$Component4);function StretchForm(){_classCallCheck(this,StretchForm);return _possibleConstructorReturn(this,_getPrototypeOf(StretchForm).apply(this,arguments));}_createClass(StretchForm,[{key:\"render\",value:function render(){return React.createElement(\"form\",{className:\"myForm\"},React.createElement(\"label\",null,\"Stretch 25% vertically?:\",React.createElement(\"input\",{type:\"checkbox\",onChange:this.props.onChange})));}}]);return StretchForm;}(React.Component);//TODO: Change hardcoded max images for loading to variable\nvar ProcessButton=/*#__PURE__*/function(_React$Component5){_inherits(ProcessButton,_React$Component5);function ProcessButton(){_classCallCheck(this,ProcessButton);return _possibleConstructorReturn(this,_getPrototypeOf(ProcessButton).apply(this,arguments));}_createClass(ProcessButton,[{key:\"render\",value:function render(){var _this=this;return React.createElement(\"div\",null,React.createElement(\"button\",{className:\"myButton\",onClick:function onClick(){return _this.props.onClick();}},\"BMP My Logo!\"));}}]);return ProcessButton;}(React.Component);var SubmitButton=/*#__PURE__*/function(_React$Component6){_inherits(SubmitButton,_React$Component6);function SubmitButton(){_classCallCheck(this,SubmitButton);return _possibleConstructorReturn(this,_getPrototypeOf(SubmitButton).apply(this,arguments));}_createClass(SubmitButton,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"button\",{className:\"myButton\",onClick:function onClick(){return _this2.props.onClick();}},\"Submit Link\");}}]);return SubmitButton;}(React.Component);var DownloadButton=/*#__PURE__*/function(_React$Component7){_inherits(DownloadButton,_React$Component7);function DownloadButton(){_classCallCheck(this,DownloadButton);return _possibleConstructorReturn(this,_getPrototypeOf(DownloadButton).apply(this,arguments));}_createClass(DownloadButton,[{key:\"render\",value:function render(){var _this3=this;return React.createElement(\"button\",{onClick:function onClick(){return _this3.props.onClick();}},\"Download BMP\");}}]);return DownloadButton;}(React.Component);var ColorChangeButton=/*#__PURE__*/function(_React$Component8){_inherits(ColorChangeButton,_React$Component8);function ColorChangeButton(){_classCallCheck(this,ColorChangeButton);return _possibleConstructorReturn(this,_getPrototypeOf(ColorChangeButton).apply(this,arguments));}_createClass(ColorChangeButton,[{key:\"render\",value:function render(){var _this4=this;return React.createElement(\"button\",{className:\"myButton\",onClick:function onClick(){return _this4.props.onClick();}},\"Replace Colors Only\");}}]);return ColorChangeButton;}(React.Component);//-------------------------------------------------------------\n//Main editor app class, contains most info in state\n//-------------------------------------------------------------\nvar Editor=/*#__PURE__*/function(_React$Component9){_inherits(Editor,_React$Component9);function Editor(props){var _this5;_classCallCheck(this,Editor);_this5=_possibleConstructorReturn(this,_getPrototypeOf(Editor).call(this,props));_this5.handleSubmitButtonClick=function(i){console.log(\"Submit Button Clicked\");outputImages[0]=_this5.state.dropboxLink;sourceImg=_this5.state.dropboxLink;console.log(sourceImg);};_this5.handleDownloadButtonClick=function(i){console.log(\"Download Button Clicked\");};_this5.handleLinkChange=function(i){_this5.setState({dropboxLink:\"https://cors-anywhere.herokuapp.com/\"+i.target.value.slice(0,-1)+\"1\"});};_this5.state={//value that holds the path to default image, then the base64 data of render\n//base64 used by Jimp, since it is a web-based app. Local files caused issues.\npicture:src,//Array of output pictures\noutput:[],dropboxLink:\"\",scaleX:0,scaleY:0,imagesLoaded:0,stretch:false};_this5.myRef=React.createRef();//TODO: Bind these functions in their declaration, similar to handleX functions\n_this5.onDrop=_this5.onDrop.bind(_assertThisInitialized(_this5));_this5.onScaleFormChangeX=_this5.onScaleFormChangeX.bind(_assertThisInitialized(_this5));_this5.onScaleFormChangeY=_this5.onScaleFormChangeY.bind(_assertThisInitialized(_this5));_this5.onStretchFormChange=_this5.onStretchFormChange.bind(_assertThisInitialized(_this5));_this5.onProcessButtonClick=_this5.onProcessButtonClick.bind(_assertThisInitialized(_this5));_this5.onColorChangeButtonClick=_this5.onColorChangeButtonClick.bind(_assertThisInitialized(_this5));return _this5;}_createClass(Editor,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(prevState.output!==this.state.output){//console.log(\"output state has changed: \" + this.state.output[0]);\n}}//-------------------------------------------------------------\n//Functions to handle events when different buttons are clicked\n//or values are changed\n//-------------------------------------------------------------\n},{key:\"onDrop\",//picture is an array passed from image uploader\n//pull most recently uploaded picture from current session\n//TODO: reformat these functions into handleDrop and handleLinkChange\nvalue:function onDrop(picture){//TODO: Insert function calls directly here to auto work on image\nvar localImg=URL.createObjectURL(picture[picture.length-1]);//Set state for display\noutputImages.push(localImg);sourceImg=localImg;/*\n    this.setState({\n      output: [URL.createObjectURL(picture[picture.length - 1])],\n    });\n    */}},{key:\"onScaleFormChangeX\",value:function onScaleFormChangeX(event){//form takes in a string, need to parse into an Int for use in Jimp\nthis.setState({scaleX:parseInt(event.target.value,10)});}},{key:\"onScaleFormChangeY\",value:function onScaleFormChangeY(event){//form takes in a string, need to parse into an Int for use in Jimp\nthis.setState({scaleY:parseInt(event.target.value,10)});}},{key:\"onStretchFormChange\",value:function onStretchFormChange(event){//console.log(event.target.checked);\nthis.setState({stretch:event.target.checked});}},{key:\"onProcessButtonClick\",value:function(){var _onProcessButtonClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.jimpResize(outputImages[0],true,this.state.scaleX,this.state.scaleY,this.state.stretch);case 2:_context.next=4;return this.jimpLogoCreationAsync(outputImages[0],false,0);case 4:_context.next=6;return this.jimpLogoCreationAsync(outputImages[0],false,0,true);case 6:_context.next=8;return this.jimpLogoCreationAsync(outputImages[0],false,0,false,5);case 8:_context.next=10;return this.jimpLogoCreationAsync(outputImages[0],false,0,false,4);case 10:_context.next=12;return this.jimpLogoCreationAsync(outputImages[0],false,0,false,3);case 12:_context.next=14;return this.jimpLogoCreationAsync(outputImages[0],false,0,false,2);case 14:_context.next=16;return this.jimpLogoCreationAsync(outputImages[0],true,7);case 16:_context.next=18;return this.jimpLogoCreationAsync(outputImages[0],true,5);case 18:_context.next=20;return this.jimpLogoCreationAsync(outputImages[0],true,3);case 20:_context.next=22;return this.jimpLogoCreationAsync(outputImages[0],true,2);case 22:_context.next=24;return this.jimpLogoCreationAsync(outputImages[0],true,7,false,5);case 24:_context.next=26;return this.jimpLogoCreationAsync(outputImages[0],true,7,false,4);case 26:_context.next=28;return this.jimpLogoCreationAsync(outputImages[0],true,7,false,3);case 28:_context.next=30;return this.jimpLogoCreationAsync(outputImages[0],true,7,false,2);case 30:_context.next=32;return this.jimpLogoCreationAsync(outputImages[0],true,5,false,5);case 32:_context.next=34;return this.jimpLogoCreationAsync(outputImages[0],true,5,false,4);case 34:_context.next=36;return this.jimpLogoCreationAsync(outputImages[0],true,5,false,3);case 36:_context.next=38;return this.jimpLogoCreationAsync(outputImages[0],true,5,false,2);case 38:_context.next=40;return this.jimpLogoCreationAsync(outputImages[0],true,3,false,5);case 40:_context.next=42;return this.jimpLogoCreationAsync(outputImages[0],true,3,false,4);case 42:_context.next=44;return this.jimpLogoCreationAsync(outputImages[0],true,3,false,3);case 44:_context.next=46;return this.jimpLogoCreationAsync(outputImages[0],true,3,false,2);case 46:_context.next=48;return this.jimpLogoCreationAsync(outputImages[0],true,2,false,5);case 48:_context.next=50;return this.jimpLogoCreationAsync(outputImages[0],true,2,false,4);case 50:_context.next=52;return this.jimpLogoCreationAsync(outputImages[0],true,2,false,3);case 52:_context.next=54;return this.jimpLogoCreationAsync(outputImages[0],true,2,false,2);case 54:case\"end\":return _context.stop();}}},_callee,this);}));function onProcessButtonClick(){return _onProcessButtonClick.apply(this,arguments);}return onProcessButtonClick;}()},{key:\"onColorChangeButtonClick\",value:function(){var _onColorChangeButtonClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.jimpLogoCreationAsync(outputImages[0],false,0,false,undefined,true);case 2:case\"end\":return _context2.stop();}}},_callee2,this);}));function onColorChangeButtonClick(){return _onColorChangeButtonClick.apply(this,arguments);}return onColorChangeButtonClick;}()//-------------------------------------------------------------\n//render functions for each visible element\n//TODO: combine everything in the same div into one render function\n//like buttons for control panel and such\n//-------------------------------------------------------------\n},{key:\"renderLogoImage\",value:function renderLogoImage(){if(outputImages[25]!==undefined)return React.createElement(\"div\",null,React.createElement(DisplayLogoImg,{picture:this.state.picture,output:this.state.output}));else if(sourceColorChange!==\"\")return React.createElement(\"div\",{className:\"workDisplay\"},React.createElement(\"img\",{src:sourceColorChange,alt:\"sourceColorChange\"}));}},{key:\"renderProcessButton\",value:function renderProcessButton(i){return React.createElement(ProcessButton,{onClick:this.onProcessButtonClick,imagesLoaded:this.state.imagesLoaded});}},{key:\"renderSubmitButton\",value:function renderSubmitButton(i){return React.createElement(SubmitButton,{onClick:this.handleSubmitButtonClick});}},{key:\"renderDownloadButton\",value:function renderDownloadButton(i){return React.createElement(DownloadButton,{onClick:this.handleDownloadButtonClick});}},{key:\"renderColorChangeButton\",value:function renderColorChangeButton(i){return React.createElement(ColorChangeButton,{onClick:this.onColorChangeButtonClick});}},{key:\"renderScaleForm\",value:function renderScaleForm(i){return React.createElement(ScaleForm,{onChangeX:this.onScaleFormChangeX,onChangeY:this.onScaleFormChangeY});}},{key:\"renderStretchForm\",value:function renderStretchForm(i){return React.createElement(StretchForm,{onChange:this.onStretchFormChange});}},{key:\"renderImageUploader\",value:function renderImageUploader(){return React.createElement(ImageUploader,{withIcon:false,buttonText:\"Choose image\",label:\"Max file size: 5mb, Filetypes accepted: .bmp | .jpg | .png\",fileContainerStyle:{backgroundColor:\"EDEEF0\"},singleImage:true,onChange:this.onDrop,imgExtension:['.jpg','.gif','.png','.bmp'],maxFileSize:5242880});}},{key:\"renderLinkForm\",value:function renderLinkForm(){return React.createElement(Linkform,{onChange:this.handleLinkChange});}//-------------------------------------------------------------\n//Functions to do the actual editing on the image\n//-------------------------------------------------------------\n//TODO: Update to using promise\n},{key:\"jimpResize\",value:function(){var _jimpResize=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(path,scale,scaleX,scaleY,stretch){var image,newHeight,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return jimp.read(path);case 2:image=_context3.sent;if(scale){if(scaleX===0){if(scaleY===0){//if both fields are not input, scale to 100 X and scale Y according to aspect ratio\nconsole.log(\"Found no size variables\");image.resize(100,jimp.AUTO,jimp.RESIZE_BEZIER);}else{//if only the Y vaue is input,\nconsole.log(\"Only found y value\");image.resize(jimp.AUTO,scaleY,jimp.RESIZE_BEZIER);}}else if(scaleY===0){if(scaleX===0){//if both fields are not input, scale to 100 X and scale Y according to aspect ratio\nconsole.log(\"Found no size variables\");image.resize(100,jimp.AUTO,jimp.RESIZE_BEZIER);}else{//if only the X vaue is input,\nconsole.log(\"Only found x value\");image.resize(scaleX,jimp.AUTO,jimp.RESIZE_BEZIER);}}//if both values are input\nelse{console.log(\"Found both size variables\");image.resize(scaleX,scaleY,jimp.RESIZE_BEZIER);}}if(stretch){newHeight=Math.round(image.bitmap.height*1.25);image.resize(image.bitmap.width,newHeight,jimp.RESIZE_BEZIER);console.log(\"Image stretched\");}_context3.next=7;return image.getBase64Async(Jimp.MIME_BMP);case 7:data=_context3.sent;outputImages[0]=data;case 9:case\"end\":return _context3.stop();}}},_callee3);}));function jimpResize(_x,_x2,_x3,_x4,_x5){return _jimpResize.apply(this,arguments);}return jimpResize;}()},{key:\"jimpLogoCreationAsync\",value:function(){var _jimpLogoCreationAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(path,posBool,pos,grayscale,numColors,onlyColorBool){var image,localColors,i,getFirstColor,sortFunction,getNewColor,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return jimp.read(path);case 2:image=_context4.sent;console.log(\"Image read\");//create local array of colors and populate it from global\n//TODO: Check if need to unallocate memory here\nlocalColors=new Array(54);if(localColors[0]===undefined){for(i=0;i<colorsArray.length;i++){localColors[i]=colorsArray[i];}}console.log(\"localColors Initialized\");if(posBool)image.posterize(pos);if(grayscale)image.greyscale();//initialize getNewColor with new colorsArray\ngetFirstColor=nearestColor.from(colorsArray);//function to scan for most popular colors in image, only do on first run\nif(firstrun){sortFunction=function _ref(a,b){if(a[1]===b[1]){return 0;}else{return a[1]>b[1]?-1:1;}};console.log('Calculating most popular colors....');image.scan(0,0,image.bitmap.width,image.bitmap.height,function(x,y,idx){//First log RGB value of current pixel, toString(16) converts\n//into hex form, padStart for 1 digit values\n//var position = [x, y];\n//red\nvar red=this.bitmap.data[idx];var redHex=red.toString(16).padStart(2,\"0\");//green\nvar green=this.bitmap.data[idx+1];var greenHex=green.toString(16).padStart(2,\"0\");//blue\nvar blue=this.bitmap.data[idx+2];var blueHex=blue.toString(16).padStart(2,\"0\");//Run nearestColor on this pixel\nvar close=getFirstColor('#'+redHex+greenHex+blueHex);//future timesave: Don't run this every time, only log frequency\n//the first time you parse the image\nfor(var i=0;i<colorsFreq.length;i++){if(colorsFreq[i][0]===close){colorsFreq[i][1]++;}}});firstrun=false;//sort colorsFreq by frequency\ncolorsFreq.sort(sortFunction);}console.log(\"Colors Calculated\");if(numColors!==undefined){localColors.length=numColors;//update colorsArray with new color order,\n//important for removing correct colors when downsizing\nfor(i=0;i<numColors;i++){localColors[i]=colorsFreq[i][0];}//console.log(\"localColors Updated: \" + localColors);\n}//\ngetNewColor=nearestColor.from(localColors);//Function to replace colors with our palette\nconsole.log(\"Replacing colors...\");image.scan(0,0,image.bitmap.width,image.bitmap.height,function(x,y,idx){//First log RGB value of current pixel, toString(16) converts\n//into hex form, padStart for 1 digit values\n//var position = [x, y];\n//red\nvar red=this.bitmap.data[idx];var redHex=red.toString(16).padStart(2,\"0\");//green\nvar green=this.bitmap.data[idx+1];var greenHex=green.toString(16).padStart(2,\"0\");//blue\nvar blue=this.bitmap.data[idx+2];var blueHex=blue.toString(16).padStart(2,\"0\");//Run nearestColor on this pixel\nvar close=getNewColor('#'+redHex+greenHex+blueHex);var closeRed=parseInt(close.substr(1,2),16);var closeGreen=parseInt(close.substr(3,2),16);var closeBlue=parseInt(close.substr(5,2),16);//Change pixel colors into nearest from our palette\n//red\nthis.bitmap.data[idx]=closeRed;//green\nthis.bitmap.data[idx+1]=closeGreen;//blue\nthis.bitmap.data[idx+2]=closeBlue;});console.log(\"Colors Replaced\");//add result to output array\n_context4.next=19;return image.getBase64Async(Jimp.MIME_BMP);case 19:data=_context4.sent;outputImages.push(data);if(onlyColorBool)sourceColorChange=data;this.forceUpdate();case 23:case\"end\":return _context4.stop();}}},_callee4,this);}));function jimpLogoCreationAsync(_x6,_x7,_x8,_x9,_x10,_x11){return _jimpLogoCreationAsync.apply(this,arguments);}return jimpLogoCreationAsync;}()//-------------------------------------------------------------\n//Final render of the application\n//-------------------------------------------------------------\n},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"selectImageDisplay\"},React.createElement(\"h1\",null,\"Select Your Image\"),this.renderLinkForm(),this.renderSubmitButton(),React.createElement(\"br\",null),React.createElement(\"p\",{className:\"or\"},\" OR\"),React.createElement(\"br\",null),this.renderImageUploader()),React.createElement(\"div\",{className:\"optionsDisplay\"},React.createElement(\"h1\",null,\"Options\"),this.renderScaleForm(),this.renderStretchForm()),React.createElement(\"div\",{className:\"buttonDisplay\"},this.renderProcessButton(),React.createElement(\"br\",null),React.createElement(\"p\",{className:\"or\"},\" OR\"),React.createElement(\"br\",null),this.renderColorChangeButton()),React.createElement(\"div\",{className:\"workDisplay\"},this.renderLogoImage()));}}]);return Editor;}(React.Component);//-------------------------------------------------------------\n//Overreaching App class, not nessecary at the moment but may be used later\n//-------------------------------------------------------------\nvar App=/*#__PURE__*/function(_React$Component10){_inherits(App,_React$Component10);function App(){_classCallCheck(this,App);return _possibleConstructorReturn(this,_getPrototypeOf(App).apply(this,arguments));}_createClass(App,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"app\"},React.createElement(\"div\",{className:\"app-img\"},React.createElement(Editor,null)),React.createElement(\"div\",{className:\"img-fields\"},React.createElement(\"div\",null)));}}]);return App;}(React.Component);//-------------------------------------------------------------\n//Final DOM render, required by React\n//-------------------------------------------------------------\nReactDOM.render(React.createElement(App,null),document.getElementById('root'));","map":{"version":3,"sources":["/Users/zakstratton/Documents/logo-processor/src/index.js"],"names":["React","ReactDOM","ImageUploader","Jimp","jimp","require","colors","black","onyx","charcoal","concrete","quicksilver","bleach","rich_brown","mushroom","sand","natural","navy","ultramarine","lagoon","cerulean","cornflower","cyan","peacock","aruba","lake","seafoam","reef","teal","pine","kelly","jade","turf","lime","goldenrod","yellow","sunflower","carmel","clementine","living_coral","persimmon","red_orange","red","burnt_orange","rust","maroon","deep_pink","hibiscus","blush","peach","lavender","iris","purple","royal_purple","moose","violet","green_apple","carrot","lapis","parrot","french_blue","outputImages","Array","firstrun","sourceImg","sourceColorChange","colorsFreq","colorsArray","i","length","Object","values","nearestColor","from","src","DisplayLogoImg","Component","Linkform","props","onChange","ScaleForm","onChangeX","onChangeY","StretchForm","ProcessButton","onClick","SubmitButton","DownloadButton","ColorChangeButton","Editor","handleSubmitButtonClick","console","log","state","dropboxLink","handleDownloadButtonClick","handleLinkChange","setState","target","value","slice","picture","output","scaleX","scaleY","imagesLoaded","stretch","myRef","createRef","onDrop","bind","onScaleFormChangeX","onScaleFormChangeY","onStretchFormChange","onProcessButtonClick","onColorChangeButtonClick","prevProps","prevState","localImg","URL","createObjectURL","push","event","parseInt","checked","jimpResize","jimpLogoCreationAsync","undefined","backgroundColor","path","scale","read","image","resize","AUTO","RESIZE_BEZIER","newHeight","Math","round","bitmap","height","width","getBase64Async","MIME_BMP","data","posBool","pos","grayscale","numColors","onlyColorBool","sortFunction","localColors","posterize","greyscale","getFirstColor","a","b","scan","x","y","idx","redHex","toString","padStart","green","greenHex","blue","blueHex","close","sort","getNewColor","closeRed","substr","closeGreen","closeBlue","forceUpdate","renderLinkForm","renderSubmitButton","renderImageUploader","renderScaleForm","renderStretchForm","renderProcessButton","renderColorChangeButton","renderLogoImage","App","render","document","getElementById"],"mappings":"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","sourcesContent":["//TODO/NOTES:\n//instead of storing results in state, use global array\n//maybe 2d array for properties? idk\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\n//import './style/_buttons.scss';\nimport ImageUploader from 'react-images-upload';\nimport Jimp from 'jimp/es';\n\nvar jimp = require('jimp');\n\n\n//Three global color data structures, one a map of objects, one an array,\n//and one a 2D array\n//TODO: Downscale to remove map of objects, unneeded\nvar colors = {\n  black: '#000000',\n  onyx: '#333538',\n  charcoal: '#5f6468',\n  concrete: '#97a0a7',\n  quicksilver: '#e4e5e6',\n  bleach: '#ffffff',\n  rich_brown: '#372820',\n  mushroom: '#716257',\n  sand: '#bab3a0',\n  natural: '#f9f4ec',\n  navy: '#081e2c',\n  ultramarine: '#29217d',\n  lagoon: '#003e66',\n  cerulean: '#0169ca',\n  cornflower: '#529afc',\n  cyan: '#009ff1',\n  peacock: '#01aec9',\n  aruba: '#9dfbe7',\n  lake: '#6ac4dd',\n  seafoam: '#4ca696',\n  reef: '#00947d',\n  teal: '#007171',\n  pine: '#2b4423',\n  kelly: '#21772f',\n  jade: '#14b25a',\n  turf: '#60933b',\n  lime: '#a0ce3e',\n  goldenrod: '#d5d03a',\n  yellow: '#fff71b',\n  sunflower: '#ffc938',\n  carmel: '#d8a15e',\n  clementine: '#ff9a23',\n  living_coral: '#fb686d',\n  persimmon: '#fd5130',\n  red_orange: '#db1d3c',\n  red: '#c50f2d',\n  burnt_orange: '#a84c28',\n  rust: '#763742',\n  maroon: '#581c32',\n  deep_pink: '#c40876',\n  hibiscus: '#de4b9b',\n  blush: '#fdaeca',\n  peach: '#f7bfab',\n  lavender: '#a08dd6',\n  iris: '#77479f',\n  purple: '#5d1e5c',\n  royal_purple: '#401e72',\n  moose: '#653c2c',\n  violet: '#6753b2',\n  green_apple: '#76c727',\n  carrot: '#fd673e',\n  lapis: '#3c2f8f',\n  parrot: '#2fd078',\n  french_blue: '#638ee4',\n};\n\nvar outputImages = new Array();\nvar firstrun = true;\nvar sourceImg = \"\";\nvar sourceColorChange = \"\";\n\n//TODO: Move initialization of arrays to seperate function\nvar colorsFreq = new Array(54);\nvar colorsArray = new Array(54);\n\n//Initialize colorsArray\n//load only hex values of colors into an array\nfor (var i = 0; i < colorsArray.length; i++){\n  colorsArray[i] = Object.values(colors)[i];\n}\n\n//make colorsFreq into a 2D array\nfor (var i = 0; i < colorsFreq.length; i++){\n  colorsFreq[i] = new Array(2);\n}\n\n//Initialize colorsFreq\n//copy array into new 2d array, starting with 0 for all frequencies\nfor (var i = 0; i < colorsFreq.length; i++){\n  colorsFreq[i][0] = colorsArray[i];\n  colorsFreq[i][1] = 0;\n}\n\nvar nearestColor = require('nearest-color').from(colors);\n\n//initialize the default image\nconst src = require(\"./test2.jpg\");\n//janky way around CORS policy for getting from dropbox link, pass through cors-anywhere server\n//var dropboxURL = \"0\"\n//var imgFinal = (\"https://cors-anywhere.herokuapp.com/\" + dropboxURL.slice(0, -1) + \"1\");\n\n//-------------------------------------------------------------\n//Main classes for displaying the output image array\n//-------------------------------------------------------------\nclass DisplayLogoImg extends React.Component{\n  render(){\n    return(\n      <div className=\"workDisplay\">\n        <div className=\"gallery\">\n          <h1>Source</h1>\n          <img className=\"workImage\" src={sourceImg} alt=\"Source\" />\n        </div>\n        <div className=\"gallery\">\n          <h1>Results</h1>\n          <h2>Scaled</h2>\n          <img className=\"workImage\" src={outputImages[0]} alt=\"Result #1\" />\n          <h2>Scaled + Our Colors</h2>\n          <img className=\"workImage\" src={outputImages[1]} alt=\"Result #1\" />\n          <h2>Scaled + Greyscale + Our Colors</h2>\n          <img className=\"workImage\" src={outputImages[2]} alt=\"Result #1\" />\n          <h2>Scaled + Our Colors (Reduced)</h2>\n          <img className=\"workImage\" src={outputImages[3]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[4]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[5]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[6]} alt=\"Result #1\" />\n          <h2>Scaled + Posterized (Values 7-5-3-2) + Our Colors</h2>\n          <img className=\"workImage\" src={outputImages[7]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[8]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[9]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[10]} alt=\"Result #1\" />\n          <h2>Scaled + Posterized (Value 7) + Our Colors (Max 5,4,3,2)</h2>\n          <img className=\"workImage\" src={outputImages[11]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[12]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[13]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[14]} alt=\"Result #1\" />\n          <h2>Scaled + Posterized (Value 5) + Our Colors (Max 5,4,3,2)</h2>\n          <img className=\"workImage\" src={outputImages[15]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[16]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[17]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[18]} alt=\"Result #1\" />\n          <h2>Scaled + Posterized (Value 3) + Our Colors (Max 5,4,3,2)</h2>\n          <img className=\"workImage\" src={outputImages[19]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[20]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[21]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[22]} alt=\"Result #1\" />\n          <h2>Scaled + Posterized (Value 2) + Our Colors (Max 5,4,3,2)</h2>\n          <img className=\"workImage\" src={outputImages[23]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[24]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[25]} alt=\"Result #1\" />\n          <img className=\"workImage\" src={outputImages[26]} alt=\"Result #1\" />\n        </div>\n      </div>\n    )\n  }\n}\n\n//-------------------------------------------------------------\n//Custom classes for each button, passes state up\n//TODO:   Merge all of one type into a single class? [buttons, forms, etc]\n//        Transfer classes into seperate file and import it\n//-------------------------------------------------------------\n\nclass Linkform extends React.Component {\n  render() {\n    return (\n      <form className=\"myForm\">\n        <label>\n          Dropbox Link:\n          <input type=\"text\" onChange={this.props.onChange}/>\n        </label>\n      </form>\n    );\n  }\n}\n\nclass ScaleForm extends React.Component{\n  render(){\n    return(\n      <form className=\"myForm\">\n        <label>\n          Resize X:\n          <input type=\"number\" onChange={this.props.onChangeX} />\n        </label>\n        <label>\n          Resize Y:\n          <input type=\"number\" onChange={this.props.onChangeY} />\n        </label>\n        Leave blank to keep aspect ratio\n      </form>\n    )\n  }\n}\n\nclass StretchForm extends React.Component{\n  render(){\n    return(\n      <form className=\"myForm\">\n        <label>\n          Stretch 25% vertically?:\n          <input type=\"checkbox\" onChange={this.props.onChange} />\n        </label>\n      </form>\n    )\n  }\n}\n\n//TODO: Change hardcoded max images for loading to variable\nclass ProcessButton extends React.Component{\n  render(){\n    return(\n      <div>\n        <button className=\"myButton\" onClick={() => this.props.onClick()}>BMP My Logo!</button>\n      </div>\n    )\n  }\n}\n\nclass SubmitButton extends React.Component{\n  render(){\n    return(\n      <button className=\"myButton\" onClick={() => this.props.onClick()}>Submit Link</button>\n    )\n  }\n}\n\nclass DownloadButton extends React.Component{\n  render(){\n    return(\n      <button onClick={() => this.props.onClick()}>Download BMP</button>\n    )\n  }\n}\n\nclass ColorChangeButton extends React.Component{\n  render(){\n    return(\n      <button className=\"myButton\" onClick={() => this.props.onClick()}>Replace Colors Only</button>\n    )\n  }\n}\n\n//-------------------------------------------------------------\n//Main editor app class, contains most info in state\n//-------------------------------------------------------------\nclass Editor extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      //value that holds the path to default image, then the base64 data of render\n      //base64 used by Jimp, since it is a web-based app. Local files caused issues.\n      picture: src,\n      //Array of output pictures\n      output: [],\n      dropboxLink: \"\",\n      scaleX: 0,\n      scaleY: 0,\n      imagesLoaded: 0,\n      stretch: false,\n    };\n    this.myRef = React.createRef();\n    //TODO: Bind these functions in their declaration, similar to handleX functions\n    this.onDrop = this.onDrop.bind(this);\n    this.onScaleFormChangeX = this.onScaleFormChangeX.bind(this);\n    this.onScaleFormChangeY = this.onScaleFormChangeY.bind(this);\n    this.onStretchFormChange = this.onStretchFormChange.bind(this);\n    this.onProcessButtonClick = this.onProcessButtonClick.bind(this);\n    this.onColorChangeButtonClick = this.onColorChangeButtonClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (prevState.output !== this.state.output){\n      //console.log(\"output state has changed: \" + this.state.output[0]);\n    }\n  }\n\n  //-------------------------------------------------------------\n  //Functions to handle events when different buttons are clicked\n  //or values are changed\n  //-------------------------------------------------------------\n  handleSubmitButtonClick = (i) => {\n    console.log(\"Submit Button Clicked\");\n    outputImages[0] = this.state.dropboxLink;\n    sourceImg = this.state.dropboxLink;\n    console.log(sourceImg);\n  }\n\n  handleDownloadButtonClick = (i) => {\n    console.log(\"Download Button Clicked\");\n  }\n\n  handleLinkChange = (i) => {\n    this.setState({\n      dropboxLink: \"https://cors-anywhere.herokuapp.com/\" + i.target.value.slice(0, -1) + \"1\",\n    });\n  }\n\n  //picture is an array passed from image uploader\n  //pull most recently uploaded picture from current session\n  //TODO: reformat these functions into handleDrop and handleLinkChange\n\n  onDrop(picture){\n    //TODO: Insert function calls directly here to auto work on image\n    var localImg = URL.createObjectURL(picture[picture.length - 1]);\n    //Set state for display\n    outputImages.push(localImg);\n    sourceImg = localImg;\n    /*\n    this.setState({\n      output: [URL.createObjectURL(picture[picture.length - 1])],\n    });\n    */\n  }\n\n  onScaleFormChangeX(event){\n    //form takes in a string, need to parse into an Int for use in Jimp\n    this.setState({\n      scaleX: parseInt(event.target.value, 10)\n    });\n  }\n\n  onScaleFormChangeY(event){\n    //form takes in a string, need to parse into an Int for use in Jimp\n    this.setState({\n      scaleY: parseInt(event.target.value, 10)\n    });\n  }\n\n  onStretchFormChange(event){\n    //console.log(event.target.checked);\n    this.setState({\n      stretch: event.target.checked,\n    });\n  }\n\n  async onProcessButtonClick(){\n    //Scale image first\n    await this.jimpResize(outputImages[0], true, this.state.scaleX, this.state.scaleY, this.state.stretch);\n    //Scale : Color Correction\n    await this.jimpLogoCreationAsync(outputImages[0], false, 0);\n    //Scale : Greyscale : Color Correction\n    await this.jimpLogoCreationAsync(outputImages[0], false, 0, true);\n    //Scale : Color Correction (Reduction)\n    await this.jimpLogoCreationAsync(outputImages[0], false, 0, false, 5);\n    await this.jimpLogoCreationAsync(outputImages[0], false, 0, false, 4);\n    await this.jimpLogoCreationAsync(outputImages[0], false, 0, false, 3);\n    await this.jimpLogoCreationAsync(outputImages[0], false, 0, false, 2);\n    //Scale : Posterize : Color Correction\n    await this.jimpLogoCreationAsync(outputImages[0], true, 7);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 5);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 3);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 2);\n    //Scale : Posterize : Color Correction (Reduction)\n    await this.jimpLogoCreationAsync(outputImages[0], true, 7, false, 5);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 7, false, 4);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 7, false, 3);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 7, false, 2);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 5, false, 5);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 5, false, 4);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 5, false, 3);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 5, false, 2);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 3, false, 5);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 3, false, 4);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 3, false, 3);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 3, false, 2);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 2, false, 5);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 2, false, 4);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 2, false, 3);\n    await this.jimpLogoCreationAsync(outputImages[0], true, 2, false, 2);\n  }\n\n  async onColorChangeButtonClick(){\n    await this.jimpLogoCreationAsync(outputImages[0], false, 0, false, undefined, true);\n  }\n\n  //-------------------------------------------------------------\n  //render functions for each visible element\n  //TODO: combine everything in the same div into one render function\n  //like buttons for control panel and such\n  //-------------------------------------------------------------\n\n  renderLogoImage(){\n    if (outputImages[25] !== undefined)\n      return (\n        <div>\n          <DisplayLogoImg\n            picture={this.state.picture}\n            output={this.state.output}\n          />\n        </div>\n      )\n    else if (sourceColorChange !== \"\")\n      return (\n        <div className=\"workDisplay\">\n          <img src={sourceColorChange} alt=\"sourceColorChange\"/>\n        </div>\n      )\n  }\n\n  renderProcessButton(i){\n    return(\n      <ProcessButton\n        onClick={this.onProcessButtonClick}\n        imagesLoaded={this.state.imagesLoaded}\n      />\n    )\n  }\n\n  renderSubmitButton(i){\n    return(\n      <SubmitButton\n        onClick={this.handleSubmitButtonClick}\n      />\n    )\n  }\n\n  renderDownloadButton(i){\n    return(\n      <DownloadButton\n        onClick={this.handleDownloadButtonClick}\n      />\n    )\n  }\n\n  renderColorChangeButton(i){\n    return(\n      <ColorChangeButton\n        onClick={this.onColorChangeButtonClick}\n      />\n    )\n  }\n\n  renderScaleForm(i){\n    return(\n      <ScaleForm\n        onChangeX={this.onScaleFormChangeX}\n        onChangeY={this.onScaleFormChangeY}\n      />\n    )\n  }\n\n  renderStretchForm(i){\n    return(\n      <StretchForm\n        onChange={this.onStretchFormChange}\n      />\n    )\n  }\n\n  renderImageUploader(){\n    return(\n      <ImageUploader\n        withIcon={false}\n        buttonText='Choose image'\n        label=\"Max file size: 5mb, Filetypes accepted: .bmp | .jpg | .png\"\n        fileContainerStyle={{backgroundColor: \"EDEEF0\"}}\n        singleImage={true}\n        onChange={this.onDrop}\n        imgExtension={['.jpg', '.gif', '.png', '.bmp']}\n        maxFileSize={5242880}\n      />\n    )\n  }\n\n  renderLinkForm(){\n    return(\n      <Linkform onChange={this.handleLinkChange}/>\n    )\n  }\n\n\n  //-------------------------------------------------------------\n  //Functions to do the actual editing on the image\n  //-------------------------------------------------------------\n  //TODO: Update to using promise\n  async jimpResize(path, scale, scaleX, scaleY, stretch){\n    let image = await jimp.read(path);\n\n    if (scale){\n      if (scaleX === 0){\n        if (scaleY === 0){\n          //if both fields are not input, scale to 100 X and scale Y according to aspect ratio\n          console.log(\"Found no size variables\");\n          image.resize(100, jimp.AUTO, jimp.RESIZE_BEZIER);\n        }\n        else {\n          //if only the Y vaue is input,\n          console.log(\"Only found y value\");\n          image.resize(jimp.AUTO, scaleY, jimp.RESIZE_BEZIER);\n        }\n      }\n      else if (scaleY === 0){\n        if (scaleX === 0){\n          //if both fields are not input, scale to 100 X and scale Y according to aspect ratio\n          console.log(\"Found no size variables\");\n          image.resize(100, jimp.AUTO, jimp.RESIZE_BEZIER);\n        }\n        else {\n          //if only the X vaue is input,\n          console.log(\"Only found x value\");\n          image.resize(scaleX, jimp.AUTO, jimp.RESIZE_BEZIER);\n        }\n      }\n      //if both values are input\n      else {\n        console.log(\"Found both size variables\");\n        image.resize(scaleX, scaleY, jimp.RESIZE_BEZIER);\n      }\n    }\n    if (stretch){\n      var newHeight = Math.round(image.bitmap.height * 1.25);\n      image.resize(image.bitmap.width, newHeight, jimp.RESIZE_BEZIER);\n      console.log(\"Image stretched\");\n    }\n\n    let data = await image.getBase64Async(Jimp.MIME_BMP);\n    outputImages[0] = data;\n  }\n\n  async jimpLogoCreationAsync(path, posBool, pos, grayscale, numColors, onlyColorBool){\n    let image = await jimp.read(path);\n    console.log(\"Image read\");\n\n    //create local array of colors and populate it from global\n    //TODO: Check if need to unallocate memory here\n    var localColors = new Array(54);\n    if (localColors[0] === undefined){\n      for (var i = 0; i < colorsArray.length; i++){\n        localColors[i] = colorsArray[i];\n      }\n    }\n    console.log(\"localColors Initialized\");\n    if (posBool)\n      image.posterize(pos);\n    if (grayscale)\n      image.greyscale();\n\n    //initialize getNewColor with new colorsArray\n    var getFirstColor = nearestColor.from(colorsArray);\n\n    //function to scan for most popular colors in image, only do on first run\n    if (firstrun){\n      console.log('Calculating most popular colors....');\n      image.scan(0, 0, image.bitmap.width, image.bitmap.height, function(x, y, idx) {\n        //First log RGB value of current pixel, toString(16) converts\n        //into hex form, padStart for 1 digit values\n        //var position = [x, y];\n        //red\n        var red = this.bitmap.data[idx];\n        var redHex = red.toString(16).padStart(2, \"0\");\n        //green\n        var green = this.bitmap.data[idx + 1];\n        var greenHex = green.toString(16).padStart(2, \"0\");\n        //blue\n        var blue = this.bitmap.data[idx + 2];\n        var blueHex = blue.toString(16).padStart(2, \"0\");\n\n        //Run nearestColor on this pixel\n        var close = getFirstColor('#' + redHex + greenHex + blueHex);\n\n        //future timesave: Don't run this every time, only log frequency\n        //the first time you parse the image\n        for (var i = 0; i < colorsFreq.length; i++){\n          if (colorsFreq[i][0] === close){\n            colorsFreq[i][1]++;\n          }\n        }\n      })\n      firstrun = false;\n\n      //sort colorsFreq by frequency\n      colorsFreq.sort(sortFunction);\n      function sortFunction(a, b){\n        if (a[1] === b[1]) {\n          return 0;\n        }\n        else {\n          return (a[1] > b[1]) ? -1 : 1;\n        }\n      }\n    }\n\n    console.log(\"Colors Calculated\");\n\n    if (numColors !== undefined){\n      localColors.length = numColors;\n      //update colorsArray with new color order,\n      //important for removing correct colors when downsizing\n      for (var i = 0; i < numColors; i++){\n        localColors[i] = colorsFreq[i][0];\n      }\n      //console.log(\"localColors Updated: \" + localColors);\n    }\n\n    //\n    var getNewColor = nearestColor.from(localColors);\n\n    //Function to replace colors with our palette\n    console.log(\"Replacing colors...\");\n    image.scan(0, 0, image.bitmap.width, image.bitmap.height, function(x, y, idx) {\n      //First log RGB value of current pixel, toString(16) converts\n      //into hex form, padStart for 1 digit values\n      //var position = [x, y];\n      //red\n      var red = this.bitmap.data[idx];\n      var redHex = red.toString(16).padStart(2, \"0\");\n      //green\n      var green = this.bitmap.data[idx + 1];\n      var greenHex = green.toString(16).padStart(2, \"0\");\n      //blue\n      var blue = this.bitmap.data[idx + 2];\n      var blueHex = blue.toString(16).padStart(2, \"0\");\n\n      //Run nearestColor on this pixel\n      var close = getNewColor('#' + redHex + greenHex + blueHex);\n\n      var closeRed = parseInt(close.substr(1,2), 16);\n      var closeGreen = parseInt(close.substr(3,2), 16);\n      var closeBlue = parseInt(close.substr(5,2), 16);\n\n      //Change pixel colors into nearest from our palette\n      //red\n      this.bitmap.data[idx] = closeRed;\n      //green\n      this.bitmap.data[idx + 1] = closeGreen;\n      //blue\n      this.bitmap.data[idx + 2] = closeBlue;\n    })\n\n    console.log(\"Colors Replaced\");\n\n    //add result to output array\n    let data = await image.getBase64Async(Jimp.MIME_BMP);\n    outputImages.push(data);\n\n    if (onlyColorBool)\n      sourceColorChange = data;\n    this.forceUpdate();\n  }\n  //-------------------------------------------------------------\n  //Final render of the application\n  //-------------------------------------------------------------\n  render() {\n    return (\n      <div>\n        <div className=\"selectImageDisplay\">\n          <h1>Select Your Image</h1>\n          {this.renderLinkForm()}\n          {this.renderSubmitButton()}\n          <br></br>\n          <p className=\"or\"> OR</p>\n          <br></br>\n          {this.renderImageUploader()}\n        </div>\n        <div className=\"optionsDisplay\">\n          <h1>Options</h1>\n          {this.renderScaleForm()}\n          {this.renderStretchForm()}\n        </div>\n        <div className=\"buttonDisplay\">\n          {this.renderProcessButton()}\n          <br></br>\n          <p className=\"or\"> OR</p>\n          <br></br>\n          {this.renderColorChangeButton()}\n        </div>\n        <div className=\"workDisplay\">\n          {this.renderLogoImage()}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n//-------------------------------------------------------------\n//Overreaching App class, not nessecary at the moment but may be used later\n//-------------------------------------------------------------\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app-img\">\n          <Editor />\n        </div>\n        <div className=\"img-fields\">\n          <div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n//-------------------------------------------------------------\n//Final DOM render, required by React\n//-------------------------------------------------------------\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}