{"ast":null,"code":"'use strict';\n\nvar constants = require('./constants');\n\nvar CrcCalculator = require('./crc');\n\nvar Parser = module.exports = function (options, dependencies) {\n  this._options = options;\n  options.checkCRC = options.checkCRC !== false;\n  this._hasIHDR = false;\n  this._hasIEND = false;\n  this._emittedHeadersFinished = false; // input flags/metadata\n\n  this._palette = [];\n  this._colorType = 0;\n  this._chunks = {};\n  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n  this.read = dependencies.read;\n  this.error = dependencies.error;\n  this.metadata = dependencies.metadata;\n  this.gamma = dependencies.gamma;\n  this.transColor = dependencies.transColor;\n  this.palette = dependencies.palette;\n  this.parsed = dependencies.parsed;\n  this.inflateData = dependencies.inflateData;\n  this.finished = dependencies.finished;\n  this.simpleTransparency = dependencies.simpleTransparency;\n\n  this.headersFinished = dependencies.headersFinished || function () {};\n};\n\nParser.prototype.start = function () {\n  this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\n};\n\nParser.prototype._parseSignature = function (data) {\n  var signature = constants.PNG_SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (data[i] !== signature[i]) {\n      this.error(new Error('Invalid file signature'));\n      return;\n    }\n  }\n\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._parseChunkBegin = function (data) {\n  // chunk content length\n  var length = data.readUInt32BE(0); // chunk type\n\n  var type = data.readUInt32BE(4);\n  var name = '';\n\n  for (var i = 4; i < 8; i++) {\n    name += String.fromCharCode(data[i]);\n  } //console.log('chunk ', name, length);\n  // chunk flags\n\n\n  var ancillary = Boolean(data[4] & 0x20); // or critical\n  //    priv = Boolean(data[5] & 0x20), // or public\n  //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n    this.error(new Error('Expected IHDR on beggining'));\n    return;\n  }\n\n  this._crc = new CrcCalculator();\n\n  this._crc.write(new Buffer(name));\n\n  if (this._chunks[type]) {\n    return this._chunks[type](length);\n  }\n\n  if (!ancillary) {\n    this.error(new Error('Unsupported critical chunk type ' + name));\n    return;\n  }\n\n  this.read(length + 4, this._skipChunk.bind(this));\n};\n\nParser.prototype._skipChunk = function ()\n/*data*/\n{\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._handleChunkEnd = function () {\n  this.read(4, this._parseChunkEnd.bind(this));\n};\n\nParser.prototype._parseChunkEnd = function (data) {\n  var fileCrc = data.readInt32BE(0);\n\n  var calcCrc = this._crc.crc32(); // check CRC\n\n\n  if (this._options.checkCRC && calcCrc !== fileCrc) {\n    this.error(new Error('Crc error - ' + fileCrc + ' - ' + calcCrc));\n    return;\n  }\n\n  if (!this._hasIEND) {\n    this.read(8, this._parseChunkBegin.bind(this));\n  }\n};\n\nParser.prototype._handleIHDR = function (length) {\n  this.read(length, this._parseIHDR.bind(this));\n};\n\nParser.prototype._parseIHDR = function (data) {\n  this._crc.write(data);\n\n  var width = data.readUInt32BE(0);\n  var height = data.readUInt32BE(4);\n  var depth = data[8];\n  var colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n\n  var compr = data[10];\n  var filter = data[11];\n  var interlace = data[12]; // console.log('    width', width, 'height', height,\n  //     'depth', depth, 'colorType', colorType,\n  //     'compr', compr, 'filter', filter, 'interlace', interlace\n  // );\n\n  if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\n    this.error(new Error('Unsupported bit depth ' + depth));\n    return;\n  }\n\n  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n    this.error(new Error('Unsupported color type'));\n    return;\n  }\n\n  if (compr !== 0) {\n    this.error(new Error('Unsupported compression method'));\n    return;\n  }\n\n  if (filter !== 0) {\n    this.error(new Error('Unsupported filter method'));\n    return;\n  }\n\n  if (interlace !== 0 && interlace !== 1) {\n    this.error(new Error('Unsupported interlace method'));\n    return;\n  }\n\n  this._colorType = colorType;\n  var bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n  this._hasIHDR = true;\n  this.metadata({\n    width: width,\n    height: height,\n    depth: depth,\n    interlace: Boolean(interlace),\n    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n    color: Boolean(colorType & constants.COLORTYPE_COLOR),\n    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n    bpp: bpp,\n    colorType: colorType\n  });\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handlePLTE = function (length) {\n  this.read(length, this._parsePLTE.bind(this));\n};\n\nParser.prototype._parsePLTE = function (data) {\n  this._crc.write(data);\n\n  var entries = Math.floor(data.length / 3); // console.log('Palette:', entries);\n\n  for (var i = 0; i < entries; i++) {\n    this._palette.push([data[i * 3], data[i * 3 + 1], data[i * 3 + 2], 0xff]);\n  }\n\n  this.palette(this._palette);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleTRNS = function (length) {\n  this.simpleTransparency();\n  this.read(length, this._parseTRNS.bind(this));\n};\n\nParser.prototype._parseTRNS = function (data) {\n  this._crc.write(data); // palette\n\n\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n    if (this._palette.length === 0) {\n      this.error(new Error('Transparency chunk must be after palette'));\n      return;\n    }\n\n    if (data.length > this._palette.length) {\n      this.error(new Error('More transparent colors than palette size'));\n      return;\n    }\n\n    for (var i = 0; i < data.length; i++) {\n      this._palette[i][3] = data[i];\n    }\n\n    this.palette(this._palette);\n  } // for colorType 0 (grayscale) and 2 (rgb)\n  // there might be one gray/color defined as transparent\n\n\n  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n    // grey, 2 bytes\n    this.transColor([data.readUInt16BE(0)]);\n  }\n\n  if (this._colorType === constants.COLORTYPE_COLOR) {\n    this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\n  }\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleGAMA = function (length) {\n  this.read(length, this._parseGAMA.bind(this));\n};\n\nParser.prototype._parseGAMA = function (data) {\n  this._crc.write(data);\n\n  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleIDAT = function (length) {\n  if (!this._emittedHeadersFinished) {\n    this._emittedHeadersFinished = true;\n    this.headersFinished();\n  }\n\n  this.read(-length, this._parseIDAT.bind(this, length));\n};\n\nParser.prototype._parseIDAT = function (length, data) {\n  this._crc.write(data);\n\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\n    throw new Error('Expected palette not found');\n  }\n\n  this.inflateData(data);\n  var leftOverLength = length - data.length;\n\n  if (leftOverLength > 0) {\n    this._handleIDAT(leftOverLength);\n  } else {\n    this._handleChunkEnd();\n  }\n};\n\nParser.prototype._handleIEND = function (length) {\n  this.read(length, this._parseIEND.bind(this));\n};\n\nParser.prototype._parseIEND = function (data) {\n  this._crc.write(data);\n\n  this._hasIEND = true;\n\n  this._handleChunkEnd();\n\n  if (this.finished) {\n    this.finished();\n  }\n};","map":{"version":3,"sources":["/Users/zakstratton/Documents/logo-processor/node_modules/pngjs/lib/parser.js"],"names":["constants","require","CrcCalculator","Parser","module","exports","options","dependencies","_options","checkCRC","_hasIHDR","_hasIEND","_emittedHeadersFinished","_palette","_colorType","_chunks","TYPE_IHDR","_handleIHDR","bind","TYPE_IEND","_handleIEND","TYPE_IDAT","_handleIDAT","TYPE_PLTE","_handlePLTE","TYPE_tRNS","_handleTRNS","TYPE_gAMA","_handleGAMA","read","error","metadata","gamma","transColor","palette","parsed","inflateData","finished","simpleTransparency","headersFinished","prototype","start","PNG_SIGNATURE","length","_parseSignature","data","signature","i","Error","_parseChunkBegin","readUInt32BE","type","name","String","fromCharCode","ancillary","Boolean","_crc","write","Buffer","_skipChunk","_handleChunkEnd","_parseChunkEnd","fileCrc","readInt32BE","calcCrc","crc32","_parseIHDR","width","height","depth","colorType","compr","filter","interlace","COLORTYPE_TO_BPP_MAP","bpp","COLORTYPE_PALETTE","color","COLORTYPE_COLOR","alpha","COLORTYPE_ALPHA","_parsePLTE","entries","Math","floor","push","_parseTRNS","COLORTYPE_PALETTE_COLOR","COLORTYPE_GRAYSCALE","readUInt16BE","_parseGAMA","GAMMA_DIVISION","_parseIDAT","leftOverLength","_parseIEND"],"mappings":"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","sourcesContent":["'use strict';\n\nvar constants = require('./constants');\nvar CrcCalculator = require('./crc');\n\n\nvar Parser = module.exports = function(options, dependencies) {\n\n  this._options = options;\n  options.checkCRC = options.checkCRC !== false;\n\n  this._hasIHDR = false;\n  this._hasIEND = false;\n  this._emittedHeadersFinished = false;\n\n  // input flags/metadata\n  this._palette = [];\n  this._colorType = 0;\n\n  this._chunks = {};\n  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n\n  this.read = dependencies.read;\n  this.error = dependencies.error;\n  this.metadata = dependencies.metadata;\n  this.gamma = dependencies.gamma;\n  this.transColor = dependencies.transColor;\n  this.palette = dependencies.palette;\n  this.parsed = dependencies.parsed;\n  this.inflateData = dependencies.inflateData;\n  this.finished = dependencies.finished;\n  this.simpleTransparency = dependencies.simpleTransparency;\n  this.headersFinished = dependencies.headersFinished || function() {};\n};\n\nParser.prototype.start = function() {\n  this.read(constants.PNG_SIGNATURE.length,\n    this._parseSignature.bind(this)\n  );\n};\n\nParser.prototype._parseSignature = function(data) {\n\n  var signature = constants.PNG_SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (data[i] !== signature[i]) {\n      this.error(new Error('Invalid file signature'));\n      return;\n    }\n  }\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._parseChunkBegin = function(data) {\n\n  // chunk content length\n  var length = data.readUInt32BE(0);\n\n  // chunk type\n  var type = data.readUInt32BE(4);\n  var name = '';\n  for (var i = 4; i < 8; i++) {\n    name += String.fromCharCode(data[i]);\n  }\n\n  //console.log('chunk ', name, length);\n\n  // chunk flags\n  var ancillary = Boolean(data[4] & 0x20); // or critical\n  //    priv = Boolean(data[5] & 0x20), // or public\n  //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n    this.error(new Error('Expected IHDR on beggining'));\n    return;\n  }\n\n  this._crc = new CrcCalculator();\n  this._crc.write(new Buffer(name));\n\n  if (this._chunks[type]) {\n    return this._chunks[type](length);\n  }\n\n  if (!ancillary) {\n    this.error(new Error('Unsupported critical chunk type ' + name));\n    return;\n  }\n\n  this.read(length + 4, this._skipChunk.bind(this));\n};\n\nParser.prototype._skipChunk = function(/*data*/) {\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._handleChunkEnd = function() {\n  this.read(4, this._parseChunkEnd.bind(this));\n};\n\nParser.prototype._parseChunkEnd = function(data) {\n\n  var fileCrc = data.readInt32BE(0);\n  var calcCrc = this._crc.crc32();\n\n  // check CRC\n  if (this._options.checkCRC && calcCrc !== fileCrc) {\n    this.error(new Error('Crc error - ' + fileCrc + ' - ' + calcCrc));\n    return;\n  }\n\n  if (!this._hasIEND) {\n    this.read(8, this._parseChunkBegin.bind(this));\n  }\n};\n\nParser.prototype._handleIHDR = function(length) {\n  this.read(length, this._parseIHDR.bind(this));\n};\nParser.prototype._parseIHDR = function(data) {\n\n  this._crc.write(data);\n\n  var width = data.readUInt32BE(0);\n  var height = data.readUInt32BE(4);\n  var depth = data[8];\n  var colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n  var compr = data[10];\n  var filter = data[11];\n  var interlace = data[12];\n\n  // console.log('    width', width, 'height', height,\n  //     'depth', depth, 'colorType', colorType,\n  //     'compr', compr, 'filter', filter, 'interlace', interlace\n  // );\n\n  if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\n    this.error(new Error('Unsupported bit depth ' + depth));\n    return;\n  }\n  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n    this.error(new Error('Unsupported color type'));\n    return;\n  }\n  if (compr !== 0) {\n    this.error(new Error('Unsupported compression method'));\n    return;\n  }\n  if (filter !== 0) {\n    this.error(new Error('Unsupported filter method'));\n    return;\n  }\n  if (interlace !== 0 && interlace !== 1) {\n    this.error(new Error('Unsupported interlace method'));\n    return;\n  }\n\n  this._colorType = colorType;\n\n  var bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n\n  this._hasIHDR = true;\n\n  this.metadata({\n    width: width,\n    height: height,\n    depth: depth,\n    interlace: Boolean(interlace),\n    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n    color: Boolean(colorType & constants.COLORTYPE_COLOR),\n    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n    bpp: bpp,\n    colorType: colorType\n  });\n\n  this._handleChunkEnd();\n};\n\n\nParser.prototype._handlePLTE = function(length) {\n  this.read(length, this._parsePLTE.bind(this));\n};\nParser.prototype._parsePLTE = function(data) {\n\n  this._crc.write(data);\n\n  var entries = Math.floor(data.length / 3);\n  // console.log('Palette:', entries);\n\n  for (var i = 0; i < entries; i++) {\n    this._palette.push([\n      data[i * 3],\n      data[i * 3 + 1],\n      data[i * 3 + 2],\n      0xff\n    ]);\n  }\n\n  this.palette(this._palette);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleTRNS = function(length) {\n  this.simpleTransparency();\n  this.read(length, this._parseTRNS.bind(this));\n};\nParser.prototype._parseTRNS = function(data) {\n\n  this._crc.write(data);\n\n  // palette\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n    if (this._palette.length === 0) {\n      this.error(new Error('Transparency chunk must be after palette'));\n      return;\n    }\n    if (data.length > this._palette.length) {\n      this.error(new Error('More transparent colors than palette size'));\n      return;\n    }\n    for (var i = 0; i < data.length; i++) {\n      this._palette[i][3] = data[i];\n    }\n    this.palette(this._palette);\n  }\n\n  // for colorType 0 (grayscale) and 2 (rgb)\n  // there might be one gray/color defined as transparent\n  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n    // grey, 2 bytes\n    this.transColor([data.readUInt16BE(0)]);\n  }\n  if (this._colorType === constants.COLORTYPE_COLOR) {\n    this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\n  }\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleGAMA = function(length) {\n  this.read(length, this._parseGAMA.bind(this));\n};\nParser.prototype._parseGAMA = function(data) {\n\n  this._crc.write(data);\n  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleIDAT = function(length) {\n  if (!this._emittedHeadersFinished) {\n    this._emittedHeadersFinished = true;\n    this.headersFinished();\n  }\n  this.read(-length, this._parseIDAT.bind(this, length));\n};\nParser.prototype._parseIDAT = function(length, data) {\n\n  this._crc.write(data);\n\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\n    throw new Error('Expected palette not found');\n  }\n\n  this.inflateData(data);\n  var leftOverLength = length - data.length;\n\n  if (leftOverLength > 0) {\n    this._handleIDAT(leftOverLength);\n  }\n  else {\n    this._handleChunkEnd();\n  }\n};\n\nParser.prototype._handleIEND = function(length) {\n  this.read(length, this._parseIEND.bind(this));\n};\nParser.prototype._parseIEND = function(data) {\n\n  this._crc.write(data);\n\n  this._hasIEND = true;\n  this._handleChunkEnd();\n\n  if (this.finished) {\n    this.finished();\n  }\n};\n"]},"metadata":{},"sourceType":"script"}