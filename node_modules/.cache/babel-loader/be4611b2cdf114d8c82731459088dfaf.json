{"ast":null,"code":"/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\nfunction DOMBufferStream(arrayBuffer, offset, length, bigEndian, global, parentOffset) {\n  this.global = global;\n  offset = offset || 0;\n  length = length || arrayBuffer.byteLength - offset;\n  this.arrayBuffer = arrayBuffer.slice(offset, offset + length);\n  this.view = new global.DataView(this.arrayBuffer, 0, this.arrayBuffer.byteLength);\n  this.setBigEndian(bigEndian);\n  this.offset = 0;\n  this.parentOffset = (parentOffset || 0) + offset;\n}\n\nDOMBufferStream.prototype = {\n  setBigEndian: function setBigEndian(bigEndian) {\n    this.littleEndian = !bigEndian;\n  },\n  nextUInt8: function nextUInt8() {\n    var value = this.view.getUint8(this.offset);\n    this.offset += 1;\n    return value;\n  },\n  nextInt8: function nextInt8() {\n    var value = this.view.getInt8(this.offset);\n    this.offset += 1;\n    return value;\n  },\n  nextUInt16: function nextUInt16() {\n    var value = this.view.getUint16(this.offset, this.littleEndian);\n    this.offset += 2;\n    return value;\n  },\n  nextUInt32: function nextUInt32() {\n    var value = this.view.getUint32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  },\n  nextInt16: function nextInt16() {\n    var value = this.view.getInt16(this.offset, this.littleEndian);\n    this.offset += 2;\n    return value;\n  },\n  nextInt32: function nextInt32() {\n    var value = this.view.getInt32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  },\n  nextFloat: function nextFloat() {\n    var value = this.view.getFloat32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  },\n  nextDouble: function nextDouble() {\n    var value = this.view.getFloat64(this.offset, this.littleEndian);\n    this.offset += 8;\n    return value;\n  },\n  nextBuffer: function nextBuffer(length) {\n    //this won't work in IE10\n    var value = this.arrayBuffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return value;\n  },\n  remainingLength: function remainingLength() {\n    return this.arrayBuffer.byteLength - this.offset;\n  },\n  nextString: function nextString(length) {\n    var value = this.arrayBuffer.slice(this.offset, this.offset + length);\n    value = String.fromCharCode.apply(null, new this.global.Uint8Array(value));\n    this.offset += length;\n    return value;\n  },\n  mark: function mark() {\n    var self = this;\n    return {\n      openWithOffset: function openWithOffset(offset) {\n        offset = (offset || 0) + this.offset;\n        return new DOMBufferStream(self.arrayBuffer, offset, self.arrayBuffer.byteLength - offset, !self.littleEndian, self.global, self.parentOffset);\n      },\n      offset: this.offset,\n      getParentOffset: function getParentOffset() {\n        return self.parentOffset;\n      }\n    };\n  },\n  offsetFrom: function offsetFrom(marker) {\n    return this.parentOffset + this.offset - (marker.offset + marker.getParentOffset());\n  },\n  skip: function skip(amount) {\n    this.offset += amount;\n  },\n  branch: function branch(offset, length) {\n    length = typeof length === 'number' ? length : this.arrayBuffer.byteLength - (this.offset + offset);\n    return new DOMBufferStream(this.arrayBuffer, this.offset + offset, length, !this.littleEndian, this.global, this.parentOffset);\n  }\n};\nmodule.exports = DOMBufferStream;","map":{"version":3,"sources":["/Users/zakstratton/Documents/logo-processor/node_modules/exif-parser/lib/dom-bufferstream.js"],"names":["DOMBufferStream","arrayBuffer","offset","length","bigEndian","global","parentOffset","byteLength","slice","view","DataView","setBigEndian","prototype","littleEndian","nextUInt8","value","getUint8","nextInt8","getInt8","nextUInt16","getUint16","nextUInt32","getUint32","nextInt16","getInt16","nextInt32","getInt32","nextFloat","getFloat32","nextDouble","getFloat64","nextBuffer","remainingLength","nextString","String","fromCharCode","apply","Uint8Array","mark","self","openWithOffset","getParentOffset","offsetFrom","marker","skip","amount","branch","module","exports"],"mappings":"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","sourcesContent":["/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nfunction DOMBufferStream(arrayBuffer, offset, length, bigEndian, global, parentOffset) {\n\tthis.global = global;\n\toffset = offset || 0;\n\tlength = length || (arrayBuffer.byteLength - offset);\n\tthis.arrayBuffer = arrayBuffer.slice(offset, offset + length);\n\tthis.view = new global.DataView(this.arrayBuffer, 0, this.arrayBuffer.byteLength);\n\tthis.setBigEndian(bigEndian);\n\tthis.offset = 0;\n\tthis.parentOffset = (parentOffset || 0) + offset;\n}\n\nDOMBufferStream.prototype = {\n\tsetBigEndian: function(bigEndian) {\n\t\tthis.littleEndian = !bigEndian;\n\t},\n\tnextUInt8: function() {\n\t\tvar value = this.view.getUint8(this.offset);\n\t\tthis.offset += 1;\n\t\treturn value;\n\t},\n\tnextInt8: function() {\n\t\tvar value = this.view.getInt8(this.offset);\n\t\tthis.offset += 1;\n\t\treturn value;\n\t},\n\tnextUInt16: function() {\n\t\tvar value = this.view.getUint16(this.offset, this.littleEndian);\n\t\tthis.offset += 2;\n\t\treturn value;\n\t},\n\tnextUInt32: function() {\n\t\tvar value = this.view.getUint32(this.offset, this.littleEndian);\n\t\tthis.offset += 4;\n\t\treturn value;\n\t},\n\tnextInt16: function() {\n\t\tvar value = this.view.getInt16(this.offset, this.littleEndian);\n\t\tthis.offset += 2;\n\t\treturn value;\n\t},\n\tnextInt32: function() {\n\t\tvar value = this.view.getInt32(this.offset, this.littleEndian);\n\t\tthis.offset += 4;\n\t\treturn value;\n\t},\n\tnextFloat: function() {\n\t\tvar value = this.view.getFloat32(this.offset, this.littleEndian);\n\t\tthis.offset += 4;\n\t\treturn value;\n\t},\n\tnextDouble: function() {\n\t\tvar value = this.view.getFloat64(this.offset, this.littleEndian);\n\t\tthis.offset += 8;\n\t\treturn value;\n\t},\n\tnextBuffer: function(length) {\n\t\t//this won't work in IE10\n\t\tvar value = this.arrayBuffer.slice(this.offset, this.offset + length);\n\t\tthis.offset += length;\n\t\treturn value;\n\t},\n\tremainingLength: function() {\n\t\treturn this.arrayBuffer.byteLength - this.offset;\n\t},\n\tnextString: function(length) {\n\t\tvar value = this.arrayBuffer.slice(this.offset, this.offset + length);\n\t\tvalue = String.fromCharCode.apply(null, new this.global.Uint8Array(value));\n\t\tthis.offset += length;\n\t\treturn value;\n\t},\n\tmark: function() {\n\t\tvar self = this;\n\t\treturn {\n\t\t\topenWithOffset: function(offset) {\n\t\t\t\toffset = (offset || 0) + this.offset;\n\t\t\t\treturn new DOMBufferStream(self.arrayBuffer, offset, self.arrayBuffer.byteLength - offset, !self.littleEndian, self.global, self.parentOffset);\n\t\t\t},\n\t\t\toffset: this.offset,\n\t\t\tgetParentOffset: function() {\n\t\t\t\treturn self.parentOffset;\n\t\t\t}\n\t\t};\n\t},\n\toffsetFrom: function(marker) {\n\t\treturn this.parentOffset + this.offset - (marker.offset + marker.getParentOffset());\n\t},\n\tskip: function(amount) {\n\t\tthis.offset += amount;\n\t},\n\tbranch: function(offset, length) {\n\t\tlength = typeof length === 'number' ? length : this.arrayBuffer.byteLength - (this.offset + offset);\n\t\treturn new DOMBufferStream(this.arrayBuffer, this.offset + offset, length, !this.littleEndian, this.global, this.parentOffset);\n\t}\n};\n\nmodule.exports = DOMBufferStream;\n"]},"metadata":{},"sourceType":"script"}